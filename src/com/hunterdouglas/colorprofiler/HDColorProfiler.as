package  com.hunterdouglas.colorprofiler{	import flash.display.*;	import flash.events.*;	import flash.net.*;		import com.enlighten.common.ENLLoader;	public class HDColorProfiler extends Sprite{		private var loaderXMLConfig:ENLLoader;		private var xmlConfig:XML;		private var imageLoader:Loader;		private var index:int	= 0;		private const MAX:int = 10;		private var bitmap:Bitmap;		private var colors:Array;		private var count:int;		private var indexPixelW:int;		private var indexColor:int;		private var minCount:int;		private var topColors:Array;		private var maxW:int;		private var maxH:int;		private const MAX_SIZE:int	= 105;		private var rowID:int=0;		private var swatchID:int;		private var isNewSwatch:Boolean;				public function HDColorProfiler() {			addEventListener(Event.ADDED_TO_STAGE, handlerAddedToStage);		}		private function handlerAddedToStage(e:Event):void		{			loadXML();		}		private function loadXML() {			loaderXMLConfig = new ENLLoader();			loaderXMLConfig.addEventListener(Event.COMPLETE, handlerXMLConfigLoaded);			trace("SWATCH LIST URL: "+Path.DOMAIN+"/swatch_list.php");			loaderXMLConfig.load(Path.DOMAIN+"/swatch_list.php");					}		private function handlerXMLConfigLoaded(e:Event)		{			//trace("ccs : handlerXMLConfigLoaded");						xmlConfig 	= XML(e.target.data);// as XML;						imageLoader 		= new Loader();			imageLoader.y		= 20;			addChildAt(imageLoader, 0);									startProfile();					}		private function startProfile():void		{			progress.text	= "PROGRESS: "+(100*index/(xmlConfig.image.length()-1))+" %";			index++;						if(index<xmlConfig.image.length())			{				swatchProgress.text	= "SWATCH PROGRESS: 0 %";				swatchName.text	= "SWATCH NAME: "+xmlConfig.image[index].file;				loadImage(String(xmlConfig.image[index].path));							}else{				progress.text	= "PROGRESS: 100 %";				swatchProgress.text	= "SWATCH PROGRESS: 100 %";				swatchName.text	= "SWATCH NAME: ";			}		}		public function loadImage(_str:String):void		{			trace("LOAD IMAGE: "+_str);			var imageURL:String	= _str;			imageLoader.load(new URLRequest(imageURL)); 			imageLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, handleLoadImageComplete);			imageLoader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR , handlerLoadImageError);		}		private function handleLoadImageComplete(e:Event):void		{				bitmap	= Bitmap(imageLoader.content);			imageLoader.x	= stage.stageWidth-bitmap.width;						colors	= new Array();			count	= 0;			indexPixelW		= -1;			maxW	= bitmap.width;			maxH	= bitmap.height;			addEventListener(Event.ENTER_FRAME, handlerEnterFrame);		}		private function handlerEnterFrame(e:Event):void		{			indexPixelW++			if(indexPixelW<maxW)			{				for(var j:int=0; j<maxH; j++)				{					var found:Boolean	= false;					var obj:Object;					var pixel:uint 		= bitmap.bitmapData.getPixel32(indexPixelW, j);					for(var k:int=0; k<colors.length; k++)					{						obj	= colors[k];						if(obj.color == pixel.toString(16))						{							obj.count++;							found	= true;							break;						}					}					if(!found)					{						obj	= {color:pixel.toString(16), count:1};						colors.push(obj);											}					count++;					swatchProgress.text	= "SWATCH PROGRESS: "+(100*count/(maxW*maxH))+" %";							}			}else{				removeEventListener(Event.ENTER_FRAME, handlerEnterFrame);				showResult();			}		}		private function showResult():void		{			topColors	= new Array();			indexColor	= 0;			checkSwatch();		}		private function pickColor():void		{			//trace("pickColor : "+indexColor+"/"+colors.length);			if(indexColor<colors.length)// && colors[indexColor].count>=minCount)			{				//trace("Color: 0x"+colors[indexColor].color+" ["+colors[indexColor].count+"]");				insertColor();			}else{				//trace("-----");				generateProfile();			}		}		private function generateProfile():void		{			if(rowID>24)			{				while(container.numChildren>0)				{					container.removeChildAt(0);				}				rowID	= 0;			}						var profile:HDColorProfile	= new HDColorProfile();			profile.setContent(index-1, xmlConfig.image[index], Bitmap(imageLoader.content), topColors);			profile.y	= rowID*profile.backgroundHeight;			container.addChild(profile);			rowID++;									startProfile();		}		private function handlerLoadImageError(e:IOErrorEvent):void		{			trace("ERRORRRR: ");					}		private function sortByCount(a:Object, b:Object)		{			if(a.count<b.count)			{				return 1;			}else if(a.count>b.count)			{				return -1;			}else{				return 0;			}		}		private function checkSwatch():void		{			var url:String			= Path.DOMAIN+"/checkSwatch.php?file="+xmlConfig.image[index].file;			trace("CHECK URL: "+url);			var request:URLRequest	= new URLRequest(url);			var loader:URLLoader	= new URLLoader();			loader.addEventListener(Event.COMPLETE, handleCheckSwatchComplete);			loader.addEventListener(IOErrorEvent.IO_ERROR, onIOError);			loader.load(request);		}		private function handleCheckSwatchComplete(e:Event):void 		{			trace("CHECK SWATCH ID: "+e.target.data+" isNewSwatch: "+isNewSwatch);			swatchID	= int(e.target.data);			if(swatchID==-1)			{				insertSwatch();			}else{				if(isNewSwatch)				{					isNewSwatch	= false;					pickColor();				}else{					startProfile();				}			}		}		private function insertSwatch():void//_swatch:String		{			isNewSwatch	= true;							var url:String			= Path.DOMAIN+"/insert.php?file="+xmlConfig.image[index].file;			trace("INSERT SWATCH URL: "+url);			var request:URLRequest	= new URLRequest(url);			var loader:URLLoader	= new URLLoader();			loader.addEventListener(Event.COMPLETE, handleInsertSwatchComplete);			loader.addEventListener(IOErrorEvent.IO_ERROR, onIOError);			loader.load(request);		}		private function handleInsertSwatchComplete(e:Event):void 		{			//trace("INSERT SWATCH SQL: "+e.target.data);			checkSwatch();		}		private function insertColor():void		{			//var percent:int			= Math.round(100*colors[indexColor].count/(bitmap.width * bitmap.height));			//trace("insertColor: "+colors[indexColor].color+" "+percent+"%");						topColors.push(colors[indexColor]);						var url:String			= Path.DOMAIN+"/insertColor.php?swatch_id="+swatchID+"&color="+colors[indexColor].color+"&count="+colors[indexColor].count/(bitmap.width * bitmap.height);			//trace("CLR URL: "+url);			var request:URLRequest	= new URLRequest(url);			var loader:URLLoader	= new URLLoader();			request.method			= URLRequestMethod.GET;			loader.addEventListener(Event.COMPLETE, handleColorComplete);			loader.addEventListener(IOErrorEvent.IO_ERROR, onIOError);			loader.load(request);		}		private function handleColorComplete(event:Event):void 		{			indexColor++;			pickColor();		}		private function onIOError(event:IOErrorEvent):void 		{			trace("Error loading URL.");		}	}	}